---
import { fetchJson, workouts, zones } from '@/services'
import type { UUID } from '@/types/GymTracker'

interface Props {
  title: string
  workoutSessions: {
    workout_id: UUID
    sequence?: number
  }[]
  href: string
}

const { href, title, workoutSessions } = Astro.props

const [, day] = href.split('/')

const zonesAbbr = workoutSessions?.map(({ workout_id }) => {
  const endpointWorkoutSession = new URL(
    `/api/workouts/sessions/${workout_id}`,
    Astro.url
  )
  return fetchJson(endpointWorkoutSession)
    .then((workoutSession) => {
      const endpointZone = new URL(
        `/api/zones/${workoutSession.zone_id}`,
        Astro.url
      )
      return fetchJson(endpointZone)
    })
    .then((zone) => {
      return zone.abbreviation?.slice(0, 3)
    })
})
---

<li class='link-card'>
  <a href={href} class='flex w-full h-full justify-between'>
    <h2
      class='text-l text-black dark:text-white'
      transition:name={`title-page-${day}`}
    >
      {title}
    </h2>
    <div
      class='absolute right-0 top-0 h-full flex text-black/10 dark:text-white/30 pr-0.5'
    >
      <p
        class='text-r text-[3.25rem] sm:text-7xl font-synemono flex flex-col tabular-nums'
      >
        {
          zonesAbbr?.map((zone) => {
            return (
              <span class='leading-[2.25rem] sm:leading-[3rem] tracking-tighter'>
                {zone}
              </span>
            )
          })
        }
      </p>
    </div>
  </a>
</li>
<style>
  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  p {
    writing-mode: vertical-lr;
    font-kerning: none;
  }
</style>
